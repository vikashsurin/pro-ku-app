{"version":3,"sources":["components/PrivateRoute.js","utils/setAuthToken.js","redux/actions/@auth.js","redux/actions/types.js","components/Navbar.js","pages/Landing.js","pages/Login.js","pages/Register.js","redux/actions/@posts.js","redux/actions/@profile.js","pages/Dashboard.js","components/posts/Comment.js","components/posts/CommentForm.js","components/posts/PostItem.js","components/posts/AddPost.js","components/placeholder/PostPlaceholder.js","pages/Posts.js","components/profile/CreateProfile.js","pages/Auth.js","redux/reducers/_auth.js","redux/reducers/_profile.js","redux/reducers/_posts.js","redux/reducers/index.js","redux/store.js","components/profile/EditProfile.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","auth","Component","component","isAuthenticated","isLoading","rest","render","props","to","setAuthToken","token","axios","defaults","headers","common","loadUser","dispatch","a","localStorage","getItem","get","res","type","payload","data","console","error","message","logout","history","window","go","withRouter","authLinks","className","onClick","publicLinks","href","login","email","password","config","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","register","errors","response","password2","log","getPosts","getCurrentProfile","profile","user","posts","removePost","post_id","delete","deleteAccount","isAutheticated","useEffect","userPostList","filter","_id","renderPostsList","map","key","title","universityName","role","course","hobbies","toString","social","facebook","instagram","removeComment","comment_id","postId","comments","admin","commentList","comment","src","avatar","alt","text","date","id","setText","like","put","likes","togLike","commentToggler","setCommentToggler","commentFormToggler","setCommentFormToggler","height","Date","toLocaleString","length","push","undefined","addPost","showForm","setShowForm","autoComplete","rows","PostPlaceholder","postsList","class","createProfile","profileData","setProfileData","Auth","n","setN","initialState","profiles","combineReducers","action","setItem","removeItem","middlewares","thunk","store","createStore","rootReduer","composeWithDevTools","applyMiddleware","updateProfile","App","exact","path","Landing","Login","Register","Posts","CreateProfile","EditProfile","Dashboard","AddPost","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.623fc302.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, isLoading },\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !isLoading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { auth: state.auth };\n};\nexport default connect(mapStateToProps)(PrivateRoute);\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../../utils/setAuthToken';\n\n//load user\nexport const loadUser = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    setAuthToken(token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    // console.log('loaded', res.data);\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//register a user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    console.error(errors);\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//login a user\nexport const login = ({ email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: LOGIN_FAIL\n    }); \n  }\n};\n\n//logout user\nexport const logout = history => async dispatch => {\n  await window.history.go(2);\n\n  dispatch({ type: LOGOUT });\n  dispatch({ type: CLEAR_PROFILE });\n};\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const CREATE_PROFILE = 'CREATE_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CURRENT_PROFILE = 'CURRENT_PROFILE';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const ADD_LIKE = 'ADD_LIKE';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\nexport const REMOVE_POST = 'REMOVE_POST';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\n// ux\n","import React, { Fragment } from \"react\";\nimport { NavLink, withRouter, Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/@auth\";\nimport PropTypes from \"prop-types\";\nconst Navbar = ({ auth: { isAuthenticated, isLoading }, logout, history }) => {\n  const logOut = () => {\n    logout(history);\n    // useHistory.push(\"/posts\");\n  };\n  const authLinks = (\n    <div className='navbar'>\n      <NavLink className='navlink' to='/'>\n        Home\n      </NavLink>{\" \"}\n      <NavLink className='navlink' to='/posts'>\n        Posts\n      </NavLink>{\" \"}\n      <NavLink className='navlink' to='/dashboard'>\n        dashboard\n      </NavLink>{\" \"}\n      <NavLink className='navlink' to='/logout' onClick={() => logOut()}>\n        logOut\n      </NavLink>\n    </div>\n  );\n  const publicLinks = (\n    <div className='navbar'>\n      <NavLink className='navlink' to='/'>\n        Home\n      </NavLink>{\" \"}\n      <NavLink className='navlink' to='/posts'>\n        Posts{\" \"}\n      </NavLink>\n      <NavLink className='navlink' to='/auth'>\n        Login/Register{\" \"}\n      </NavLink>{\" \"}\n    </div>\n  );\n  return (\n    <Fragment>\n      {!isLoading && isAuthenticated ? authLinks : publicLinks}\n    </Fragment>\n  );\n};\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => {\n  return { auth: state.auth };\n};\nexport default connect(mapStateToProps, { logout })(withRouter(Navbar));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Landing = props => {\n  return (\n    <div className='landing'>\n      <div>\n        <span>T</span>\n        <span>\n          hroughout years the way of doing things have advanced themselves\n          drastically , whether it be medical science , technical science and\n          the list goes onn....yes, I mean the internet is doing great wonders .\n        </span>\n      </div>\n      <div>\n        <span>D</span>\n        <span>\n          o you think the way of learning should have a positive effect of the\n          internet , here we begin - just let’s give it a try ...\n        </span>\n      </div>\n      <div>\n        <span>T</span>\n        <span>\n          he concept of the app is based on a very simple yet effective action :\n          “Debate” - check it out .\n        </span>\n      </div>\n      <div className='footer'>\n        <a href=''>link</a>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../redux/actions/@auth\";\n\nconst Login = ({ isAuthenticated, login }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const { email, password } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    login(formData);\n  };\n  //redirect is already logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <form className='login' onSubmit={e => onSubmit(e)}>\n        <input\n          name='email'\n          type='text'\n          value={email}\n          onChange={e => onChange(e)}\n          placeholder='Enter Email'\n        />\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={e => onChange(e)}\n          placeholder='******'\n        />\n        <button type='submit' value='Login'>\n          submit\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { isAuthenticated: state.auth.isAuthenticated };\n};\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { register } from \"../redux/actions/@auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ isAuthenticated, register }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    register(formData);\n    console.log(\"registered\");\n  };\n\n  //redirect is already logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <form className='register' onSubmit={e => onSubmit(e)}>\n        <input\n          name='name'\n          type='text'\n          value={name}\n          onChange={e => onChange(e)}\n          placeholder='Enter Name'\n        />\n        <input\n          name='email'\n          type='text'\n          value={email}\n          onChange={e => onChange(e)}\n          placeholder='Enter Email'\n        />\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={e => onChange(e)}\n          placeholder='******'\n        />\n        <input\n          name='password2'\n          type='password'\n          value={password2}\n          onChange={e => onChange(e)}\n          placeholder='******'\n        />\n        <button type='submit' value='Register'>\n          submit\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { isAuthenticated: state.auth.isAuthenticated };\n};\nexport default connect(mapStateToProps, { register })(Register);\n","import axios from \"axios\";\nimport {\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  EDIT_POST,\n  UPDATE_LIKES,\n  POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  REMOVE_POST\n} from \"./types\";\n\nimport setAuthToken from \"../../utils/setAuthToken\";\n\n//get all posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n\n//add a post\nexport const addPost = (formData, history) => async dispatch => {\n  try {\n    setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/posts\", formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    history.push(\"/posts\");\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n\n//remove a post\nexport const removePost = post_id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${post_id}`);\n    dispatch({\n      type: REMOVE_POST,\n      payload: post_id\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n\n//add a like\nexport const like = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/likes/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n\n//add comment\nexport const comment = (text, id) => async dispatch => {\n  try {\n    setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(`/api/posts/comments/${id}`, text, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: { id: id, comments: res.data }\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n\n//remove comment\nexport const removeComment = (post_id, comment_id) => async dispatch => {\n  try {\n    setAuthToken(localStorage.token);\n    const res = await axios.delete(\n      `/api/posts/comments/${post_id}/${comment_id}`\n    );\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: { postId: post_id, comments: res.data }\n    });\n    console.log(\"from\", comment_id);\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\n","import axios from 'axios';\nimport {\n  CREATE_PROFILE,\n  PROFILE_ERROR,\n  CURRENT_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED\n} from './types';\nimport setAuthToken from '../../utils/setAuthToken';\n\n//create a profile\nexport const createProfile = (profileData, history) => async dispatch => {\n  try {\n    const token = localStorage.token;\n    setAuthToken(token);\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profiles', profileData, config);\n\n    dispatch({\n      type: CREATE_PROFILE,\n      payload: res.data\n    });\n    history.push('/dashboard');\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n};\n//update a profile\nexport const updateProfile = (profileData, history) => async dispatch => {\n  try {\n    setAuthToken(localStorage.token);\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.put('/api/profiles', profileData, config);\n    dispatch({\n      type: CREATE_PROFILE,\n      payload: res.data\n    });\n    console.log(res.data);\n    history.push('/dashboard');\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n};\n\n//get current profile\nexport const getCurrentProfile = () => async dispatch => {\n  const token = localStorage.token;\n  setAuthToken(token);\n  try {\n    const res = await axios.get('/api/profiles/me');\n    dispatch({\n      type: CURRENT_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: PROFILE_ERROR\n    });\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n  }\n};\n\n//delete profile and user\nexport const deleteAccount = () => async dispatch => {\n  const token = localStorage.token;\n  try {\n    setAuthToken(token);\n\n    await axios.delete('/api/profiles');\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: ACCOUNT_DELETED\n    });\n    console.log('i was called');\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: PROFILE_ERROR\n    });\n  }\n};\n","import React, { Fragment, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../redux/actions/@posts\";\nimport PropTypes from \"prop-types\";\nimport { getCurrentProfile, deleteAccount } from \"../redux/actions/@profile\";\nimport { removePost } from \"../redux/actions/@posts\";\nimport { loadUser } from \"../redux/actions/@auth\";\n\nconst Dashboard = ({\n  getPosts,\n  loadUser,\n  deleteAccount,\n  auth: { isAutheticated },\n  profile: { profile, isLoading },\n  getCurrentProfile,\n  removePost,\n  user,\n  posts: { posts }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [isAutheticated]);\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const userPostList = user ? posts.filter(post => post.user === user._id) : \"\";\n  const renderPostsList =\n    user && posts ? (\n      userPostList.map(post => (\n        <div className='dash-p-lst' key={post._id}>\n          <span>{post.title}</span>\n          <button onClick={e => removePost(post._id)}>delete</button>\n        </div>\n      ))\n    ) : (\n      <div>loading</div>\n    );\n  if (!profile) {\n    return (\n      <Fragment>\n        <div className='no-profile'>\n          <p>You have not created a profile yet , go ahead and create one</p>\n          <NavLink className='dash-navlink' to='/create-profile'>\n            create Profile\n          </NavLink>\n        </div>\n      </Fragment>\n    );\n  }\n  return isLoading === true && profile === null ? (\n    <div className='loading'>\n      <div>loading</div>\n      <div></div>\n      <div></div>\n    </div>\n  ) : (\n    <div className='dashboard'>\n      <div className='prop-list'>\n        <div className='prop-val'>\n          <div>Name :</div> <div>{profile.universityName}</div>\n        </div>\n        <div className='prop-val'>\n          <div>Role :</div> <div>{profile.role}</div>\n        </div>\n        <div className='prop-val'>\n          <div>Course :</div> <div>{profile.course}</div>\n        </div>\n        <div className='prop-val'>\n          <div>UniversityName :</div> <div>{profile.universityName}</div>\n        </div>\n        <div className='prop-val'>\n          <div>Hobbies :</div> <div>{profile.hobbies.toString()}</div>\n        </div>\n        <div className='prop-val'>\n          <div>facebook :</div>{\" \"}\n          <div>\n            <a href={!profile.social ? \"\" : profile.social.facebook}>\n              {!profile.social ? \"\" : profile.social.facebook}\n            </a>\n          </div>\n        </div>\n        <div className='prop-val'>\n          <div>instagram :</div>{\" \"}\n          <div>\n            <a href={!profile.social ? \"\" : profile.social.instagram}>\n              {!profile.social ? \"\" : profile.social.instagram}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className='dash-btns'>\n        <NavLink className='dash-nav' to='/edit-profile'>\n          Edit profile\n        </NavLink>\n        <button onClick={() => deleteAccount()}>Delete Profile</button>\n      </div>\n      <div className='post-list'>{renderPostsList}</div>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  posts: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  removePost: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profile: state.profile,\n    user: state.auth.user,\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  loadUser,\n  getCurrentProfile,\n  getPosts,\n  removePost,\n  deleteAccount\n})(Dashboard);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeComment } from \"../../redux/actions/@posts\";\nimport PropTypes from \"prop-types\";\n\nconst Comment = ({ admin, auth, post_id, removeComment, comments }) => {\n  const commentList = comments\n    ? comments.map(comment => {\n        console.log(comment.name);\n        return (\n          <div className='comment'>\n            <img\n              className='img'\n              src={comment.avatar}\n              alt='pic'\n              onClick={() => console.log(comment.avatar)}\n            />\n            <div className='detail'>\n              <a href='#' className='name'>\n                {comment.name}\n              </a>\n              <span className='text'>{comment.text.toString()}</span>\n              <span className='date'>{comment.date}</span>\n            </div>\n\n            {/* <Toggler\n              auth={auth}\n              pst_id={post_id}\n              adm_id={admin._id}\n              cmt_id={comment._id}\n              cmt_user={comment.user}\n              removeComment={removeComment}\n              cmt_txt={comment.text}\n            /> */}\n            {auth && admin._id\n              ? admin._id === comment.user && (\n                  <div\n                    className='dot'\n                    onClick={() => removeComment(post_id, comment._id)}\n                  >\n                    ...\n                  </div>\n                )\n              : \"\"}\n          </div>\n        );\n      })\n    : \"\";\n  return (\n    <Fragment>\n      <div className='c-container'>{commentList}</div>\n    </Fragment>\n  );\n};\n\n// const Toggler = ({\n//   auth,\n//   pst_id,\n//   adm_id,\n//   cmt_id,\n//   cmt_txt,\n//   cmt_user,\n//   removeComment\n// }) => {\n//   const [showDelete, setShowDelete] = useState(false);\n//   const deleteComment = cmt_id => {\n//     removeComment(pst_id, cmt_id);\n//     console.log(cmt_txt, cmt_id, pst_id);\n//   };\n//   return (\n//     <div onClick={() => setShowDelete(!showDelete)}>\n//       {auth && adm_id\n//         ? adm_id === cmt_user && <div className='dot'>...</div>\n//         : \"\"}\n//       {showDelete && (\n//         <div\n//           className='c-delete'\n//           onClick={async () => await deleteComment(cmt_id)}\n//         >\n//           X\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\nComment.propTypes = {\n  admin: PropTypes.object.isRequired,\n  auth: PropTypes.bool.isRequired,\n  post_id: PropTypes.object.isRequired,\n  removeComment: PropTypes.func.isRequired,\n  comments: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return { state };\n};\nexport default connect(mapStateToProps, { removeComment })(Comment);\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { comment } from \"../../redux/actions/@posts\";\n\nconst CommentForm = ({ id, comment }) => {\n  const [text, setText] = useState(\"\");\n  const onSubmit = e => {\n    e.preventDefault();\n    comment({ text }, id);\n    setText(\"\");\n  };\n\n  const submit = () => {};\n  return (\n    <Fragment>\n      <form className='cf-form' onSubmit={e => onSubmit(e)}>\n        <div className='cf-div'>\n          <input\n            className='cf-input'\n            type='text'\n            name='text'\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder='write a comment'\n          />\n          <button type='submit'>send</button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nCommentForm.propTypes = {\n  comment: PropTypes.func.isRequired\n};\n\nexport default connect(null, { comment })(CommentForm);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { like } from \"../../redux/actions/@posts\";\nimport PropTypes from \"prop-types\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport { UPDATE_LIKES } from \"../../redux/actions/types\";\n\nconst PostItem = ({\n  auth,\n  history,\n  user,\n  like,\n  post: { _id, title, text, name, avatar, date, comments, likes }\n}) => {\n  const togLike = user ? likes.filter(like => like.user === user._id) : \"null\";\n\n  const likePost = e => {\n    auth ? like(_id) : history.push(\"/login\");\n  };\n  const [commentToggler, setCommentToggler] = useState(false);\n  const [commentFormToggler, setCommentFormToggler] = useState(false);\n  const toggleComments = () => {\n    setCommentToggler(!commentToggler);\n  };\n\n  return (\n    <Fragment>\n      <div className='pc-wrapper'>\n        <div className='pc-top'>\n          <img height={\"50px\"} src={avatar} alt='pic' />\n          <span className='title'>{title}</span>\n          <div className='auth-dat'>\n            <span className='author'>\n              <i>{name}</i>\n            </span>\n            <span className='date'>{new Date(date).toLocaleString()}</span>\n          </div>\n        </div>\n        <div className='pc-body'>{text}</div>\n\n        <div className='pc-counts'>\n          <span className='li'>\n            likes:{likes.length > 0 ? likes.length : \"\"}\n          </span>\n          <span\n            className='co'\n            onClick={() => [\n              setCommentToggler(!commentToggler),\n              setCommentFormToggler(!commentFormToggler)\n            ]}\n          >\n            comments:{comments.length > 0 ? comments.length : \"\"}\n          </span>\n        </div>\n\n        <div className='pc-buttons'>\n          <div className='buttons' onClick={e => likePost(e)}>\n            <span>\n              {togLike[0] === undefined || togLike.toString() === \"null\"\n                ? \"like\"\n                : auth === true\n                ? \"liked\"\n                : \"like\"}\n            </span>\n          </div>\n          <div\n            className='buttons'\n            onClick={() => setCommentFormToggler(!commentFormToggler)}\n          >\n            comment\n          </div>\n          <div className='buttons'>share</div>\n        </div>\n        {commentToggler && auth && (\n          <Comment auth={auth} admin={user} post_id={_id} comments={comments} />\n        )}\n        {commentFormToggler && auth && <CommentForm id={_id} />}\n      </div>\n    </Fragment>\n  );\n};\nPostItem.propTypes = {\n  like: PropTypes.func.isRequired,\n  toggleComments: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => {\n  return { posts: state.posts };\n};\nexport default connect(mapStateToProps, { like })(withRouter(PostItem));\n","import React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { addPost } from \"../../redux/actions/@posts\";\n\nconst AddPost = ({ addPost, history }) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    text: \"\"\n  });\n  const [showForm, setShowForm] = useState(false);\n  const { title, text } = formData;\n  const onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    addPost(formData, history);\n    setShowForm(!showForm);\n    setFormData({ title: \"\", text: \"\" });\n  };\n\n  return (\n    <Fragment>\n      <form className='addpost' onSubmit={e => onSubmit(e)}>\n        <input\n          type='text'\n          name='title'\n          placeholder='   Title'\n          autoComplete='off'\n          value={title}\n          onChange={e => onChange(e)}\n          onClick={() => setShowForm(!showForm)}\n        />\n        <br />\n        {showForm && (\n          <Fragment>\n            <textarea\n              type='text'\n              name='text'\n              rows='20'\n              placeholder='    about topic in detail'\n              value={text}\n              onChange={e => onChange(e)}\n            />\n            <br />\n            <button type='submit'> create post</button>\n          </Fragment>\n        )}\n      </form>\n    </Fragment>\n  );\n};\n\nAddPost.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, { addPost })(withRouter(AddPost));\n","import React from \"react\";\n\nconst PostPlaceholder = props => {\n  return (\n    <div className='pp-wrapper'>\n      <div className='pp-top'>\n        <div className='pp-img'></div>\n        <span className='pp-title'>\n          <div></div>\n        </span>\n      </div>\n      <div className='pp-body'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n       \n      </div>\n\n      <div className='pp-counts'>\n        <div></div>\n      </div>\n\n      <div className='pp-buttons'>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nPostPlaceholder.propTypes = {};\n\nexport default PostPlaceholder;\n","import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../redux/actions/@posts\";\nimport PostItem from \"../components/posts/PostItem\";\nimport AddPost from \"../components/posts/AddPost\";\nimport PostPlaceholder from \"../components/placeholder/PostPlaceholder\";\n\nconst Posts = ({\n  getPosts,\n  posts: { posts, isLoading },\n  auth: { isAuthenticated, user }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const postsList = isLoading ? (\n    <Fragment>\n      <PostPlaceholder />\n      <PostPlaceholder />\n      <PostPlaceholder />\n    </Fragment>\n  ) : (\n    posts.map(post => {\n      return (\n        <Fragment key={post._id}>\n          <PostItem\n            key={post._id}\n            auth={isAuthenticated}\n            user={user}\n            post={post}\n          />\n        </Fragment>\n      );\n    })\n  );\n  return (\n    <Fragment>\n      {/* <Link to='/add-post'>add Post</Link> */}\n      <div class='main-body'>\n        {isAuthenticated && <AddPost />}\n        <div className='posts'>{postsList}</div>\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  posts: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  toggleComState: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    auth: state.auth\n  };\n};\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { Fragment, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"../../redux/actions/@profile\";\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [profileData, setProfileData] = useState({\n    role: \"\",\n    course: \"\",\n    universityName: \"\",\n    hobbies: \"\",\n    facebook: \"\",\n    instagram: \"\"\n  });\n  let {\n    role,\n    course,\n    universityName,\n    hobbies,\n    facebook,\n    instagram\n  } = profileData;\n\n  const onChange = e => {\n    setProfileData({ ...profileData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(profileData, history);\n    console.log(\"from create profile\", profileData);\n  };\n\n  return (\n    <div className='create-prof-wrapper'>\n      <form className='create-profile' onSubmit={e => onSubmit(e)}>\n        <Fragment>\n          <select name='role' value={role} onChange={e => onChange(e)}>\n            <option value='0'>Select Role</option>\n            <option value='Student'>Student</option>\n            <option value='Reacher'>Teacher</option>\n          </select>\n\n          <select name='course' value={course} onChange={e => onChange(e)}>\n            <option value='0'>choose course</option>\n            <option value='B.A'>B.A</option>\n            <option value='BSC'>BSC</option>\n          </select>\n        </Fragment>\n        <input\n          type='text'\n          name='universityName'\n          value={universityName}\n          onChange={e => onChange(e)}\n          placeholder='Enter university name'\n        />\n        <input\n          type='text'\n          name='hobbies'\n          value={hobbies}\n          onChange={e => onChange(e)}\n          placeholder='Do you have hobbies'\n        />\n        <div>\n          <h4>Social network</h4>\n          <input\n            type='text'\n            name='facebook'\n            value={facebook}\n            onChange={e => onChange(e)}\n            placeholder='facebook link'\n          />\n          <input\n            type='text'\n            name='instagram'\n            value={instagram}\n            onChange={e => onChange(e)}\n            placeholder='instagram link'\n          />\n        </div>\n        <button type='submit'>submit</button>\n      </form>\n    </div>\n  );\n};\n\nCreateProfile.propTypes = {};\n\nconst mapStateToProps = state => {\n  console.log(\"this is state\", state.profile);\n  return { profile: state.profile };\n};\nexport default connect(mapStateToProps, { createProfile })(\n  withRouter(CreateProfile)\n);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nconst Auth = props => {\n  const [n, setN] = useState(true);\n  return (\n    <div className='auth'>\n      <div className='tog-auth'>\n        <span onClick={() => setN(true)}>Login</span>\n        <span onClick={() => setN(false)}>Register</span>\n      </div>\n\n      {n ? <Login /> : <Register />}\n    </div>\n  );\n};\n\nAuth.propTypes = {};\n\nexport default Auth;\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CREATE_PROFILE,\n  PROFILE_ERROR,\n  CURRENT_PROFILE,\n  CLEAR_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n  profile: '',\n  profiles: [],\n  isLoading: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CREATE_PROFILE:\n    case CURRENT_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        isLoading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        profile: null,\n        isLoading: false\n      };\n\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  EDIT_POST,\n  UPDATE_LIKES,\n  POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  REMOVE_POST\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  isLoading: true\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        post: null,\n        isLoading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        isLoading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        isLoading: false\n      };\n    case REMOVE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        isLoading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id\n            ? { ...post, comments: payload.comments }\n            : post\n        )\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.postId\n            ? { ...post, comments: payload.comments }\n            : post\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./_auth\";\nimport profile from \"./_profile\";\nimport posts from \"./_posts\";\nexport default combineReducers({\n  auth,\n  profile,\n  posts\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReduer from './reducers';\n\nconst initialState = {};\nconst middlewares = [thunk];\n\nconst store = createStore(\n  rootReduer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateProfile } from \"../../redux/actions/@profile\";\nimport { getCurrentProfile } from \"../../redux/actions/@profile\";\n\nconst EditProfile = ({\n  getCurrentProfile,\n  updateProfile,\n  profile: { profile, isLoading },\n  history\n}) => {\n  const [profileData, setProfileData] = useState({\n    role: \"\",\n    course: \"\",\n    universityName: \"\",\n    hobbies: \"\",\n    facebook: \"\",\n    instagram: \"\"\n  });\n  const {\n    role,\n    course,\n    universityName,\n    hobbies,\n    facebook,\n    instagram\n  } = profileData;\n\n  useEffect(() => {\n    console.log(\"hello there\");\n    getCurrentProfile();\n    setProfileData({\n      role: !profile.role ? \"\" : profile.role,\n      course: !profile.course ? \"\" : profile.course,\n      universityName: !profile.universityName ? \"\" : profile.universityName,\n      hobbies: !profile.hobbies ? \"\" : profile.hobbies.toString(),\n      facebook: !profile.social ? \"\" : profile.social.facebook,\n      instagram: !profile.social ? \"\" : profile.social.instagram\n    });\n  }, [isLoading, getCurrentProfile]);\n\n  const onChange = e => {\n    console.log(\"changed\");\n    setProfileData({ ...profileData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    updateProfile(profileData, history);\n    console.log(\"from update profile\", profileData);\n  };\n\n  return (\n    <div className='edit-profile-wrapper'>\n      <form className='edit-profile' onSubmit={e => onSubmit(e)}>\n        <select name='role' value={role} onChange={e => onChange(e)}>\n          <option value='0'>Select Role</option>\n          <option value='Student'>Student</option>\n          <option value='Teacher'>Teacher</option>\n        </select>\n\n        <select name='course' value={course} onChange={e => onChange(e)}>\n          <option value='0'>Choose Course</option>\n          <option value='B.A'>B.A</option>\n          <option value='BSC'>BSC</option>\n        </select>\n        <input\n          className='inp-uname'\n          type='text'\n          name='universityName'\n          value={universityName}\n          onChange={e => onChange(e)}\n          placeholder='Enter university name'\n        />\n        <input\n          className='inp-hob'\n          type='text'\n          name='hobbies'\n          value={hobbies}\n          onChange={e => onChange(e)}\n          placeholder='Do you have hobbies'\n        />\n        <div>\n          <h4>Social network</h4>\n          <input\n            type='text'\n            name='facebook'\n            value={facebook}\n            onChange={e => onChange(e)}\n            placeholder='facebook link'\n          />\n          <input\n            type='text'\n            name='instagram'\n            value={instagram}\n            onChange={e => onChange(e)}\n            placeholder='instagram link'\n          />\n        </div>\n        <button type='submit'>submit</button>\n      </form>\n    </div>\n  );\n};\n\nEditProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  updateProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(\"this is state\", state.profile);\n  return { profile: state.profile };\n};\nexport default connect(mapStateToProps, { updateProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./styles/main.scss\";\n\n//componenets\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./pages/Landing\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Posts from \"./pages/Posts\";\nimport CreateProfile from \"./components/profile/CreateProfile\";\nimport AddPost from \"./components/posts/AddPost\";\nimport Auth from \"./pages/Auth\";\n//redux\nimport store from \"./redux/store\";\nimport { loadUser } from \"./redux/actions/@auth\";\nimport EditProfile from \"./components/profile/EditProfile\";\n\nconst App = props => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Fragment>\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/auth' component={Auth} />\n            <Route exact path='/posts' component={Posts} />\n            <Route exact path='/create-profile' component={CreateProfile} />\n            <Route exact path='/edit-profile' component={EditProfile} />\n            <PrivateRoute exact path='/dashboard' component={Dashboard} />\n            <PrivateRoute exact path='/add-post' component={AddPost} />\n          </Switch>\n        </Router>\n      </Provider>\n    </Fragment>\n  );\n};\n\n// App.propTypes = {};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}